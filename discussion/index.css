/*CSS Reset*/
* {
	/*	
		zeros all margins and paddings for our elements, because by default, elements are being added margins and paddings by browser

		box-sizing: border-box; to accurately measure our element, that padding and border are not added on top of the element's width
			- a property in CSS that determines how the width and height of an element are calculated. 
				- content
				- padding
				- border
				- The box-sizing property has two values: 
			- content-box
				- this is the default value, it means that the width and height of na element are calculated on its content, padding and border 
					ex. content(element - h1 100px) + padding(5px) + border(2px) => 107px

			- border-box
				- the width and height of an element are calculated based on its content, padding and border all included 
					ex. content(element - h1 93px) + padding(5px) + border(2px) => 107px

	*/
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

#my-element{
	width: 100px;
	padding: 10px;
	border: 2px solid black;
}

#box1 {
	height: 150px;
	width: 150px;
	padding: 50px;
	border: 1px solid black;
	background-color: orange;
	margin-left: 30px;
	margin-right: 30px;
	display: inline-block;
	vertical-align: top;
}
/*
	without box-sizing: border-box;

		the exact width of our element: 252px

		1px left border + 1px right border + 50px left padding + 50px right padding + 150px width = 252px

	with box-sizing: border-box;

		the exact width of element: ?

		border and padding are included in the total width
		1px left border + 1px right border + 50px left padding + 50px right padding + 48px width = 150px

	padding - is space within an element
	margin - is space outside of the element or outside of an element's border
*/

#box2 {
	height: 150px;
	width: 150px;
	border: 1px solid black;
	background-color: yellow;
	display: inline-block;
	vertical-align: top;
}

span{
	height: 150px;
	width: 150px;
	border: 1px solid black;
	background-color: green;
	display: inline-block;
}
}